{"ast":null,"code":"var _jsxFileName = \"/Users/yannansun/code/jr-25/P2-weather-app/weather-app/front-end/src/components/WeatherMainContainer/WeatherMainContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport CityWeatherCard from \"../CityWeatherCard/CityWeatherCard\";\nimport TodayWeatherCard from \"../TodayWeatherCard/TodayWeatherCard\";\nimport ForecastWeatherCard from '../ForecastWeatherCard/ForecastWeatherCard';\nimport './WeatherMainContainer.scss';\nimport { getWeather } from '../../api/backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherMainContainer() {\n  _s();\n  const [data, setData] = useState();\n  const apiData = {\n    city: \"Sydney\",\n    temp: 32,\n    temp_max: 35,\n    temp_min: 31,\n    huminity: 2,\n    wind: 1\n  };\n  const cityData = [{\n    min: 18,\n    max: 19,\n    city: \"sydney\"\n  }, {\n    min: 18,\n    max: 19,\n    city: \"mel\"\n  }, {\n    min: 18,\n    max: 20,\n    city: \"bri\"\n  }, {\n    min: 18,\n    max: 20,\n    city: \"perth\"\n  }];\n  const dayData = [{\n    min: 18,\n    max: 19,\n    day: \"Mon\",\n    huminity: \"5\"\n  }, {\n    min: 18,\n    max: 19,\n    day: \"Tue\",\n    huminity: \"10\"\n  }, {\n    min: 16,\n    max: 23,\n    day: \"Wed\",\n    huminity: \"5\"\n  }, {\n    min: 18,\n    max: 20,\n    day: \"Thu\",\n    huminity: \"6\"\n  }, {\n    min: 12,\n    max: 18,\n    day: \"Fri\",\n    huminity: \"10\"\n  }, {\n    min: 18,\n    max: 20,\n    day: \"Sat\",\n    huminity: \"30\"\n  }, {\n    min: 5,\n    max: 20,\n    day: \"Sun\",\n    huminity: \"60\"\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getWeather();\n      setData(result.data);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WeatherMainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodayWeatherCard\",\n      children: /*#__PURE__*/_jsxDEV(TodayWeatherCard, {\n        data: apiData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherCards\",\n      children: [/*#__PURE__*/_jsxDEV(CityWeatherCard, {\n        cities: cityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ForecastWeatherCard, {\n        days: dayData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherMainContainer, \"azuMSrRMdWC3pR6NtR+TeXKSBZs=\");\n_c = WeatherMainContainer;\nexport default WeatherMainContainer;\nvar _c;\n$RefreshReg$(_c, \"WeatherMainContainer\");","map":{"version":3,"names":["useEffect","useState","CityWeatherCard","TodayWeatherCard","ForecastWeatherCard","getWeather","jsxDEV","_jsxDEV","WeatherMainContainer","_s","data","setData","apiData","city","temp","temp_max","temp_min","huminity","wind","cityData","min","max","dayData","day","fetchData","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cities","days","_c","$RefreshReg$"],"sources":["/Users/yannansun/code/jr-25/P2-weather-app/weather-app/front-end/src/components/WeatherMainContainer/WeatherMainContainer.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport CityWeatherCard from \"../CityWeatherCard/CityWeatherCard\";\nimport TodayWeatherCard from \"../TodayWeatherCard/TodayWeatherCard\";\nimport ForecastWeatherCard from '../ForecastWeatherCard/ForecastWeatherCard'\nimport './WeatherMainContainer.scss'\nimport { getWeather } from '../../api/backend';\n\nfunction WeatherMainContainer() {\n    const [data,setData]=useState();\n\n    const apiData = {\n        city: \"Sydney\",\n        temp: 32,\n        temp_max: 35,\n        temp_min: 31,\n        huminity: 2,\n        wind: 1\n    };\n\n    const cityData = [\n        { min: 18, max: 19, city: \"sydney\" },\n        { min: 18, max: 19, city: \"mel\" },\n        { min: 18, max: 20, city: \"bri\" },\n        { min: 18, max: 20, city: \"perth\" },\n    ];\n\n    const dayData = [\n        { min: 18, max: 19, day: \"Mon\", huminity: \"5\" },\n        { min: 18, max: 19, day: \"Tue\", huminity: \"10\" },\n        { min: 16, max: 23, day: \"Wed\", huminity: \"5\" },\n        { min: 18, max: 20, day: \"Thu\", huminity: \"6\" },\n        { min: 12, max: 18, day: \"Fri\", huminity: \"10\" },\n        { min: 18, max: 20, day: \"Sat\", huminity: \"30\" },\n        { min: 5, max: 20, day: \"Sun\", huminity: \"60\" },\n    ];\n\n    useEffect(()=>{\n        const fetchData = async () => {\n            const result = await getWeather();\n            setData(result.data);\n        };\n        fetchData()\n    },[])\n\n    return (\n        <div className=\"WeatherMainContainer\">\n            <div className=\"TodayWeatherCard\"><TodayWeatherCard data={apiData} /></div>\n            <div className=\"WeatherCards\">\n                <CityWeatherCard cities={cityData} />\n                <ForecastWeatherCard days={dayData} />\n            </div>\n        </div>\n    );\n}\n\nexport default WeatherMainContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}